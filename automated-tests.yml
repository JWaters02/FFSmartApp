trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    echo Listing all files and directories in the repository at all levels
    find .
  displayName: 'List all files in the repo recursively'

- script: |
    echo Installing Python dependencies for each module
    for dep_file in $(find src -name 'local_dependencies.txt'); do
      echo "Installing dependencies from $dep_file"
      pip install -r $dep_file
    done
  displayName: 'Install Module Dependencies'

# - script: |
#     echo "Adjusting PYTHONPATH to include project src directory"
#     export PYTHONPATH=$PYTHONPATH:$(pwd)/src
#     echo "PYTHONPATH adjusted to: $PYTHONPATH"
#   displayName: 'Adjust PYTHONPATH'

- script: |
    export PYTHONPATH=$(pwd):$PYTHONPATH
    echo "PYTHONPATH adjusted to: $PYTHONPATH"
  displayName: 'Set PYTHONPATH'

- script: |
    echo "Running unit tests for fridge_mgr"
    python -m unittest src/fridge_mgr/test/test_index.py -v
  displayName: 'Run fridge_mgr Test'
  condition: always()

- script: |
    echo "Running unit tests for health_report_mgr"
    python -m unittest src/health_report_mgr/test/test_index.py -v
  displayName: 'Run health_report_mgr Test'
  condition: always()

- script: |
    echo "Running unit tests for orders_mgr"
    python -m unittest src/orders_mgr/test/test_index.py -v
  displayName: 'Run orders_mgr Test'
  condition: always()

- script: |
    echo "Running unit tests for token_mgr"
    python -m unittest src/token_mgr/test/test_index.py -v
  displayName: 'Run token_mgr Test'
  condition: always()

- script: |
    echo "Running unit tests for update_orders"
    python -m unittest src/update_orders/test/test_index.py -v
  displayName: 'Run update_orders Test'
  condition: always()

- script: |
    echo "Running unit tests for users_mgr"
    python -m unittest src/users_mgr/test/test_index.py -v
  displayName: 'Run users_mgr Test'
  condition: always()

# - script: |
#     echo Finding and running tests for each Lambda function
#     find src -path '*/test' -type d | while read test_dir; do
#       for test_file in "$test_dir"/*test_index*.py; do
#         if [ -f "$test_file" ]; then
#           echo "Running tests in $test_file"
#           python -m unittest "$test_file" -v
#         else
#           echo "No test files found in $test_dir"
#         fi
#       done
#     done
#   displayName: 'Run Lambda function tests'
